 src/applications/detection/main.cpp | 3 +--
 src/cctag/Fitting.cpp               | 4 ++--
 2 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/applications/detection/main.cpp b/src/applications/detection/main.cpp
index da8243b..6807ada 100644
--- a/src/applications/detection/main.cpp
+++ b/src/applications/detection/main.cpp
@@ -21,7 +21,6 @@
 #include <boost/archive/xml_oarchive.hpp>
 #include <boost/exception/all.hpp>
 #include <boost/filesystem.hpp>
-#include <boost/filesystem/convenience.hpp>
 #include <boost/ptr_container/ptr_list.hpp>
 #include <boost/timer/timer.hpp>
 #include <opencv2/core/core.hpp>
@@ -501,7 +500,7 @@ int main(int argc, char** argv)
         tbb::parallel_for(0, 2, [&](size_t fileListIdx) {
             for(const auto& fileInFolder : files[fileListIdx])
             {
-                const std::string subExt(bfs::extension(fileInFolder.second));
+                const std::string subExt(fileInFolder.second.extension().string());
 
                 if((subExt == ".png") || (subExt == ".jpg") || (subExt == ".PNG") || (subExt == ".JPG"))
                 {
diff --git a/src/cctag/Fitting.cpp b/src/cctag/Fitting.cpp
index 931922e..59b3a3a 100644
--- a/src/cctag/Fitting.cpp
+++ b/src/cctag/Fitting.cpp
@@ -226,7 +226,7 @@ template void fitEllipse(std::vector<cctag::Point2d<Eigen::Vector3f>>::const_ite
 } // geometry
 
 float innerProdMin(const std::vector<cctag::EdgePoint*>& filteredChildren, float thrCosDiffMax, Point2d<Vector3s> & p1, Point2d<Vector3s> & p2) {
-            using namespace boost::numeric;
+            //using namespace boost::numeric;
             //using namespace cctag::numerical;
 
             EdgePoint* pAngle1 = nullptr;
@@ -335,7 +335,7 @@ void ellipseFitting( cctag::numerical::geometry::Ellipse& e, const std::vector<c
 }
 
 void circleFitting(cctag::numerical::geometry::Ellipse& e, const std::vector<cctag::EdgePoint*>& points) {
-  using namespace boost::numeric;
+  //using namespace boost::numeric;
 
   std::size_t nPoints = points.size();
 
