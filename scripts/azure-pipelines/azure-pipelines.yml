# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: MIT
#
variables:
  windows-pool: 'PrWin-2020-06-04'
  linux-pool: 'PrLin-2020-06-08'
  delete-tombstones-first: false

stages:
  - stage: delete_tombstones
    displayName: 'Delete Tombstones'
    jobs:
    - job: windows
      displayName: 'Clean Windows Tombstones'
      pool: $(windows-pool)
      condition: eq(variables['delete-tombstones-first'], 'true')
      steps:
      - task: PowerShell@2
        displayName: 'Initialize Environment'
        inputs:
          filePath: 'scripts/azure-pipelines/windows/initialize-environment.ps1'
      - script: rmdir /s /q W:\fail
        displayName: 'Delete W:\fail'
    - job: linux
      displayName: 'Clean Linux Tombstones'
      pool: $(linux-pool)
      condition: eq(variables['delete-tombstones-first'], 'true')
      steps:
      - bash: rm -rf /archives/fail
        displayName: 'Delete /archives/fail'
    - job: osx
      displayName: 'Clean MacOS Tombstones'
      condition: eq(variables['delete-tombstones-first'], 'true')
      pool:
        name: vcpkgAgentPool
        demands: Agent.OS -equals Darwin
      steps:
      - bash: rm -rf /Users/vagrant/Data/archives/fail
        displayName: 'Delete /Users/vagrant/Data/archives/fail'

  - stage: run_pr_test
    displayName: 'Run PR Test'
    dependsOn: delete_tombstones
    jobs:
      - template: windows/azure-pipelines.yml
        parameters:
          triplet: x86-windows
          jobName: x86_windows
          poolName: $(windows-pool)

      - template: windows/azure-pipelines.yml
        parameters:
          triplet: x64-windows
          jobName: x64_windows
          poolName: $(windows-pool)

      - template: windows/azure-pipelines.yml
        parameters:
          triplet: x64-windows-static
          jobName: x64_windows_static
          poolName: $(windows-pool)

      - template: windows/azure-pipelines.yml
        parameters:
          triplet: x64-uwp
          jobName: x64_uwp
          poolName: $(windows-pool)

      - template: windows/azure-pipelines.yml
        parameters:
          triplet: arm64-windows
          jobName: arm64_windows
          poolName: $(windows-pool)

      - template: windows/azure-pipelines.yml
        parameters:
          triplet: arm-uwp
          jobName: arm_uwp
          poolName: $(windows-pool)

      - template: osx/azure-pipelines.yml

      - template: linux/azure-pipelines.yml
        parameters:
          poolName: $(linux-pool)
